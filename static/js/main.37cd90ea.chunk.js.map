{"version":3,"sources":["assets/chevron--down.svg","assets/vader-icon.svg","components/character.js","components/search.js","components/dropdown.js","components/filter.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Character","_ref","name","gender","hair_color","eye_color","react_default","a","createElement","className","Search","onClick","onChange","value","placeholder","type","Dropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","isOpen","state","makeSelection","selected","select","_this2","_this$state","toggleStyle","display","arrowStyle","transform","curTitle","title","list","options","map","option","index","key","src","Chevron","alt","style","Component","Filter","numResults","filterResults","components_dropdown","baseURL","App","characters","all","male","female","none","query","filteredCharacters","getResults","window","alert","fetch","then","res","json","data","results","filter","character","getQuery","event","target","filterString","split","toLowerCase","concat","length","vader","components_character","components_search","bind","components_filter","ReactDOM","render","src_App","document","getElementById"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mRCkBzBC,SAbG,SAAAC,GAA2C,IAAzCC,EAAyCD,EAAzCC,KAAMC,EAAmCF,EAAnCE,OAAQC,EAA2BH,EAA3BG,WAAYC,EAAeJ,EAAfI,UAC5C,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBP,GACjCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,YAAOL,GACPG,EAAAC,EAAAC,cAAA,YAAOJ,GACPE,EAAAC,EAAAC,cAAA,YAAOH,OCOAK,SAdA,SAAAT,GAA6C,IAA3CU,EAA2CV,EAA3CU,QAASC,EAAkCX,EAAlCW,SAAUC,EAAwBZ,EAAxBY,MAAOC,EAAiBb,EAAjBa,YACzC,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,gBACVM,KAAK,OACLD,YAAaA,EACbF,SAAUA,IAEZN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcE,QAASA,EAASE,MAAOA,GAAzD,qCC+CSG,cAtDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,OAAS,WACPP,EAAKQ,SAAS,CAACC,QAAST,EAAKU,MAAMD,UAVlBT,EAenBW,cAAgB,SAACC,GACfZ,EAAKQ,SAAS,CAACC,QAAST,EAAKU,MAAMD,OAAQG,SAAUA,IACrDZ,EAAKD,MAAMc,OAAOD,IAflBZ,EAAKU,MAAQ,CACXD,QAAQ,EACRG,SAAU,IAJKZ,wEAoBV,IAAAc,EAAAX,KAAAY,EAEmBZ,KAAKO,MAAzBD,EAFCM,EAEDN,OAAQG,EAFPG,EAEOH,SAGVI,EAAcP,EAAS,CAACQ,QAAS,SAAW,CAACA,QAAS,QACtDC,EAAaT,EAAS,CAACU,UAAW,kBAAoB,GACtDC,EAAwB,KAAbR,EAAkBT,KAAKJ,MAAMsB,MAAQT,EAGhDU,EAAOnB,KAAKJ,MAAMwB,QAAQC,IAAI,SAACC,EAAQC,GAAT,OAChCtC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBoC,IAAKD,EAAOjC,QAAS,kBAAMqB,EAAKH,cAAcc,KAC1EA,KAIL,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBE,QAASU,KAAKI,QAChDnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmB6B,GACjChC,EAAAC,EAAAC,cAAA,OAAKsC,IAAKC,IAAStC,UAAU,kBAAkBuC,IAAI,iBAAiBC,MAAOb,KAE7E9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBwC,MAAOf,GACpCM,EAEDlC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBE,QAAS,kBAAMqB,EAAKH,cAAc,MAAjE,yBA9CaqB,aCcRC,SAdA,SAAAlD,GAA0C,IAAxCmD,EAAwCnD,EAAxCmD,WAAYC,EAA4BpD,EAA5BoD,cAAeZ,EAAaxC,EAAbwC,QAC1C,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmB2C,EAAjC,YACA9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC8C,EAAD,CAAUf,MAAM,mBAAmBE,QAASA,EAASV,OAAQsB,iCCNjEE,EAAU,uCA6GDC,6MA1Gb5B,MAAQ,CACN6B,WAAY,CACVC,IAAK,GACLC,KAAM,GACNC,OAAQ,GACRC,KAAM,IAERC,MAAO,GACPC,mBAAoB,MAKtBC,WAAa,WACc,KAArB9C,EAAKU,MAAMkC,MACbG,OAAOC,MAAM,sCAEbC,MAAMZ,EAAUrC,EAAKU,MAAMkC,OACxBM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,IAAIb,EAAMa,EAAKC,QACXb,EAAOD,EAAIe,OAAO,SAAAC,GAAS,MAAyB,SAArBA,EAAUvE,SACzCyD,EAASF,EAAIe,OAAO,SAAAC,GAAS,MAAyB,WAArBA,EAAUvE,SAC3C0D,EAAOH,EAAIe,OAAO,SAAAC,GAAS,MAAyB,QAArBA,EAAUvE,SACzCsD,EAAa,CAACC,IAAKA,EAAKC,KAAMA,EAAMC,OAAQA,EAAQC,KAAMA,GAC9D3C,EAAKQ,SAAS,CAAC+B,WAAYA,EAAYM,mBAAoBL,SAOnEiB,SAAW,SAACC,GACV1D,EAAKQ,SAAS,CAACoC,MAAOc,EAAMC,OAAOhE,WAKrCwC,cAAgB,SAACoB,GAEf,IAAIK,EAAeL,EAAOM,MAAM,KAAK,GAAGC,cACnB,KAAjBF,EACF5D,EAAKQ,SAAS,CAACqC,mBAAoB7C,EAAKU,MAAM6B,WAAWC,MAEzDxC,EAAKQ,SAAS,CAACqC,mBAAoB7C,EAAKU,MAAM6B,WAAWqB,8EAIpD,IAKHN,EALGvC,EAEiCZ,KAAKO,MAAvC6B,EAFCxB,EAEDwB,WAAYM,EAFX9B,EAEW8B,mBAMdtB,EAAU,UAAAwC,OACHxB,EAAWE,KAAKuB,OADb,gBAAAD,OAEDxB,EAAWG,OAAOsB,OAFjB,cAAAD,OAGHxB,EAAWI,KAAKqB,OAHb,MA4Bd,OApBEV,EADgC,IAA9BT,EAAmBmB,OAEnB5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKsC,IAAKqC,IAAOnC,IAAI,cAAcvC,UAAU,oBAC7CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,8BAKIsD,EAAmBrB,IAAI,SAACgC,EAAW9B,GAAZ,OAC/BtC,EAAAC,EAAAC,cAAC4E,EAAD,CACEvC,IAAKD,EACL1C,KAAMwE,EAAUxE,KAChBC,OAAQuE,EAAUvE,OAClBE,UAAWqE,EAAUrE,UACrBD,WAAYsE,EAAUtE,eAM1BE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6E,EAAD,CACE1E,QAASU,KAAK2C,WACdnD,MAAOQ,KAAKO,MAAMkC,MAClBlD,SAAUS,KAAKsD,SAASW,KAAKjE,MAC7BP,YAAY,6BAEdR,EAAAC,EAAAC,cAAC+E,EAAD,CACE1C,IAAKxB,KAAKO,MAAMkC,MAChBV,WAAY/B,KAAKO,MAAMmC,mBAAmBmB,OAC1CzC,QAASA,EACTY,cAAehC,KAAKgC,cAAciC,KAAKjE,QAEzCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZ+D,WApGOtB,aCLlBsC,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.37cd90ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chevron--down.0ed616d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/vader-icon.1e934ee5.svg\";","// Reusable character component\n\nimport React from 'react';\nimport '../css/character.scss';\n\nconst Character = ({name, gender, hair_color, eye_color}) => {\n  return (\n    <div className='character'>\n      <h4 className='character__name'>{name}</h4>\n      <div className='character__desc'>\n        <span>{gender}</span>\n        <span>{hair_color}</span>\n        <span>{eye_color}</span>\n      </div>\n    </div>\n  );\n}\n \nexport default Character;","// Reusable searchbar component. \n\nimport React from 'react';\nimport '../css/search.scss';\n\nconst Search = ({onClick, onChange, value, placeholder}) => {\n  return (\n    <div className='search'>\n      <input \n        className='search__input'\n        type='text'\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      <button className='search__btn' onClick={onClick} value={value}>Search</button>\n    </div>\n  );\n}\n \nexport default Search;","// Custom reusable dropdown component. \n\nimport React, { Component } from 'react';\nimport '../css/dropdown.scss'\nimport Chevron from '../assets/chevron--down.svg';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      selected: ''\n    }\n  }\n\n  // Switch state of isOpen. Used to set visibility of dropdown list.\n  toggle = () => {\n    this.setState({isOpen: !this.state.isOpen});\n  }\n\n  // When a selection is made, dropdown is closed.\n  // Selection is sent to the select method passed in from parent component.\n  makeSelection = (selected) => {\n    this.setState({isOpen: !this.state.isOpen, selected: selected});\n    this.props.select(selected);\n  }\n\n  render() { \n    // destructuring for ease of access\n    const{isOpen, selected} = this.state;\n\n    // Conditional styles and title based on component state.\n    let toggleStyle = isOpen ? {display: 'block'} : {display: 'none'};\n    let arrowStyle = isOpen ? {transform: 'rotate(180deg)'} : {};\n    let curTitle = selected === '' ? this.props.title : selected;\n\n    // Create the list of options to be rendered.\n    let list = this.props.options.map((option, index) => \n      <h5 className='dropdown__item' key={index} onClick={() => this.makeSelection(option)}>\n        {option}\n      </h5>\n    );\n\n    return (\n      <div className='dropdown'>\n        <div className='dropdown__selector' onClick={this.toggle}>\n          <h5 className='dropdown__title'>{curTitle}</h5>\n          <img src={Chevron} className='dropdown__arrow' alt='dropdown arrow' style={arrowStyle}/>\n        </div>\n        <div className='dropdown__list' style={toggleStyle}>\n          {list}\n          {/* Added option to clear filter */}\n          <h5 className='dropdown__item' onClick={() => this.makeSelection('')}>\n            Clear Filter\n          </h5>\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default Dropdown;","// Filter component. Uses custom dropdown component.\n\nimport React from 'react';\nimport Dropdown from './dropdown';\nimport '../css/filter.scss'\n\nconst Filter = ({numResults, filterResults, options}) => {\n  return (\n    <div className='filter'>\n      <h5 className='filter__results'>{numResults} RESULTS</h5>\n      <div className=\"filter__selector\">\n        <h5 className='filter__gender'>GENDER</h5>\n        <div className='filter__dropdown'>\n          <Dropdown title='Filter by gender' options={options} select={filterResults} />\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default Filter;","import React, { Component } from 'react';\nimport Character from './components/character';\nimport Search from './components/search';\nimport Filter from './components/filter';\nimport './css/app.scss';\nimport vader from './assets/vader-icon.svg';\n\nconst baseURL = 'https://swapi.co/api/people/?search=';\n\nclass App extends Component {\n  state = {\n    characters: {\n      all: [] ,\n      male: [] ,\n      female: [] ,\n      none: []  \n    },\n    query: '',\n    filteredCharacters: []\n  }\n\n  // API queried once the search button has been clicked.\n  // Creates filtered sets as part of this step to provide fast filtering.\n  getResults = () => {\n    if (this.state.query === '') {\n      window.alert('Please enter a value to search for');\n    } else {\n      fetch(baseURL + this.state.query)\n        .then(res => res.json())\n        .then(data => {\n          let all = data.results;\n          let male = all.filter(character => character.gender === 'male')\n          let female = all.filter(character => character.gender === 'female')\n          let none = all.filter(character => character.gender === 'n/a')\n          let characters = {all: all, male: male, female: female, none: none};\n          this.setState({characters: characters, filteredCharacters: all});\n        }\n      );\n    }\n  }\n\n  // store the query string in component state\n  getQuery = (event) => {\n    this.setState({query: event.target.value});\n  }\n\n  // If a filter has been selected, this switches which character set is being rendered.\n  // If filters are cleared, the character set is reset to the list of all characters\n  filterResults = (filter) => {\n    // modifying the string to avoid the need of a switch statement\n    let filterString = filter.split(' ')[0].toLowerCase();\n    if (filterString === '') {\n      this.setState({filteredCharacters: this.state.characters.all})\n    } else {\n      this.setState({filteredCharacters: this.state.characters[filterString]})\n    }\n  }\n\n  render() { \n    // destructuring for easier access\n    const{characters, filteredCharacters} = this.state;\n    \n    // will be used to store conditional content for rendering\n    let results;\n    \n    // options to be passed into the dropdown selector\n    let options = [\n      `Male (${characters.male.length})`,\n      `Female (${characters.female.length})`,\n      `None (${characters.none.length})`\n    ];\n\n    // content to render for no results state\n    if (filteredCharacters.length === 0) {\n      results = \n        <div className='noResults'>\n          <div className='noResults__content'>\n            <img src={vader} alt='darth vader' className='noResults__icon'/>\n            <h2 className='noResults__desc'>Search by character name</h2> \n          </div>\n        </div>\n    } else {\n      // content to render for results present state\n      results = filteredCharacters.map((character, index) => \n        <Character \n          key={index}\n          name={character.name}\n          gender={character.gender}\n          eye_color={character.eye_color}\n          hair_color={character.hair_color}\n        />\n      );\n    }\n\n    return (\n      <div className='App'>\n        <Search \n          onClick={this.getResults}\n          value={this.state.query}\n          onChange={this.getQuery.bind(this)}\n          placeholder='Search by character name'\n        />\n        <Filter \n          key={this.state.query /*trick to re-render the filter if the query is changed*/}\n          numResults={this.state.filteredCharacters.length}\n          options={options}\n          filterResults={this.filterResults.bind(this)}\n        />\n        <div className='results'>\n          {results}\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}